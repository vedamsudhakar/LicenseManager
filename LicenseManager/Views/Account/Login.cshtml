@model LicenseManager.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h2 class="text-center">Login</h2>

<div class="d-flex justify-content-center align-items-center">
    <div class="col-md-3">
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }


        @using (Html.BeginForm("Login", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />

            <div class="form-group">
                @Html.LabelFor(m => m.UserName)
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                <div class="input-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", id = "passwordInput" })
                    <button type="button" class="btn btn-outline-secondary" tabindex="-1" id="togglePassword" style="border: 1px solid #ced4da; border-left: none;">
                        <span id="eyeIcon" class="bi bi-eye"></span>
                    </button>
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.js"></script>
    <script>
        const passwordInput = document.getElementById('passwordInput');
        const togglePassword = document.getElementById('togglePassword');
        const eyeIcon = document.getElementById('eyeIcon');
        togglePassword.addEventListener('click', function () {
            const type = passwordInput.type === 'password' ? 'text' : 'password';
            passwordInput.type = type;
            eyeIcon.className = type === 'password' ? 'bi bi-eye' : 'bi bi-eye-slash';
        });
    </script>
}