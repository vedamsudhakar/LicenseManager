@model LicenseManager.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h2>Login</h2>

<div class="col-md-3">
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <p>@error.ErrorMessage</p>
            }
        </div>
    }


    @using (Html.BeginForm("Login", "Account", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />

        <div class="form-group">
            @Html.LabelFor(m => m.UserName)
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password)
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Login</button>
        </div>
    }
</div>